<<<<<<< HEAD
version: '3.9'

x-common: &common
  environment:
    VITE_USER_POOLS_ID: ca-central-1_FxagSNQa7
    VITE_USER_POOLS_WEB_CLIENT_ID: 43hjhdf5dvi17opb0jgucfpvm7
    VITE_AWS_DOMAIN: test-fam-user-pool-domain.auth.ca-central-1.amazoncognito.com
    VITE_CHES_FROM_EMAIL : jaskiratsingh.grewal@gov.bc.ca
    VITE_CHES_ADMIN_EMAIL : jaski.grewal@gmail.com
    VITE_ZONE: DEV
  healthcheck:
    test: [ "CMD-SHELL", "curl http://localhost:3000" ]
    interval: 15s
    timeout: 5s
    retries: 5
  restart: always

services:
  frontend:
    container_name: frontend
    entrypoint: sh -c "npm ci && npm run start"
    image: node:20-bullseye
    ports: ["3000:3000"]
    volumes: ["./frontend:/app", "/app/node_modules"]
    working_dir: "/app"
    <<: *common
=======
---
version: "3.9"

x-var:
  - &POSTGRES_USER
    postgres
  - &POSTGRES_PASSWORD
    default
  - &POSTGRES_DATABASE
    postgres

x-postgres-vars: &postgres-vars
  POSTGRES_HOST: database
  POSTGRES_USER: *POSTGRES_USER
  POSTGRES_PASSWORD: *POSTGRES_PASSWORD
  POSTGRES_DATABASE: *POSTGRES_DATABASE

services:
  database:
    image: postgres:15
    container_name: database
    environment:
      <<: *postgres-vars
    healthcheck:
      test: ["CMD", "pg_isready", "-U", *POSTGRES_USER]
    ports: ["5432:5432"]

  migrations:
    image: flyway/flyway:9-alpine
    container_name: migrations
    command: info migrate info
    volumes: ["./backend/db/migrations:/flyway/sql:ro"]
    environment:
      FLYWAY_URL: jdbc:postgresql://database:5432/postgres
      FLYWAY_USER: *POSTGRES_USER
      FLYWAY_PASSWORD: *POSTGRES_PASSWORD
      FLYWAY_BASELINE_ON_MIGRATE: true
      FLYWAY_DEFAULT_SCHEMA: USERS
    depends_on:
      database:
        condition: service_healthy

  backend:
    container_name: backend
    entrypoint: sh -c "npm i && npm run start:dev"
    environment:
      <<: *postgres-vars
      NODE_ENV: development
    image: node:20-bullseye
    ports: ["3001:3000"]
    volumes: ["./backend:/app", "/app/node_modules"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api"]
    working_dir: "/app"
    depends_on:
      migrations:
        condition: service_started

  frontend:
    container_name: frontend
    entrypoint: sh -c "npm ci && npm run dev"
    environment:
      NODE_ENV: development
      PORT: 3000
      BACKEND_URL: http://backend:3000
    image: node:20-bullseye
    ports: ["3000:3000"]
    volumes: ["./frontend:/app", "/app/node_modules"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
    working_dir: "/app"
    depends_on:
      backend:
        condition: service_healthy
>>>>>>> 2577926 (Initial commit)

  caddy:
    container_name: caddy
    profiles: ["caddy"]
    build: ./frontend
<<<<<<< HEAD
    ports: ["3005:3000"]
    volumes: ["./frontend/Caddyfile:/etc/caddy/Caddyfile"]
    <<: *common

  backend:
    container_name: backend
    environment:
      CHES_TOKEN_URL : https://test.loginproxy.gov.bc.ca/auth/realms/comsvcauth/protocol/openid-connect/token
      CHES_CLIENT_ID : 09C5071A-ACE9B6FACF6
      CHES_CLIENT_SECRET : 9c82d5fc-1d34-4a0c-97f2-c0c756791c34
    ports:
      - "5000:5000"
    volumes: ["./backend:/app", "/app/node_modules"]
    restart: always
    build:
      context: ./backend
      dockerfile: Dockerfile
    healthcheck:
      test: [ "CMD-SHELL", "curl http://localhost:5000" ]
      interval: 15s
      timeout: 5s
      retries: 5
=======
    environment:
      NODE_ENV: development
      PORT: 3000
      BACKEND_URL: http://backend:3000
      LOG_LEVEL: info
    ports: ["3005:3000"]
    volumes: ["./frontend/Caddyfile:/etc/caddy/Caddyfile"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
    depends_on:
      backend:
        condition: service_healthy
>>>>>>> 2577926 (Initial commit)
