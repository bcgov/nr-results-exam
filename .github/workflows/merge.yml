name: Merge

on:
  workflow_run:
    workflows: [PR Closed]
    types: [completed]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  deploys-test:
    name: TEST Deploys
    environment: test
    runs-on: ubuntu-22.04
    permissions:
      issues: write
    strategy:
      matrix:
        name: [backend, frontend]
        include:
          - name: backend
            file: backend/openshift.deploy.yml
            overwrite: true
            verification_path: /api
          - name: frontend
            file: frontend/openshift.deploy.yml
            overwrite: true
    steps:
      - uses: bcgov-nr/action-deployer-openshift@v1.4.0
        with:
          file: ${{ matrix.file }}
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: ${{ matrix.overwrite }}
          parameters:
            -p ZONE=test -p PROMOTE=${{ github.repository }}/${{ matrix.name }}:test
            -p NAME=${{ github.event.repository.name }} ${{ matrix.parameters }}
          penetration_test: true
          penetration_test_artifact: ${{ matrix.name }}
          penetration_test_issue: ${{ matrix.name }}
          penetration_test_token: ${{ secrets.GITHUB_TOKEN }}
          verification_path: ${{ matrix.verification_path }}

  integration-tests:
    needs: [deploys-test]
    name: Integration Tests for APIs
    defaults:
      run:
        working-directory: integration-tests
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - id: cache-npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-cache-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-cache-node-modules-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
      - name: Install dependencies
        run: npm ci
      - name: Run integration tests
        run: BASE_URL=https://nr-results-exam-test-backend.apps.silver.devops.gov.bc.ca API_NAME=nest  node src/main.js

  cypress-e2e:
    name: Cypress end to end test
    needs: [deploys-test]
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: frontend
    strategy:
      matrix:
        browser: [chrome, firefox, edge]
    steps:
      - uses: actions/checkout@v4
      - id: cache-npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-cache-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-cache-node-modules-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
      - uses: cypress-io/github-action@v6
        name: Cypress run
        with:
          config: pageLoadTimeout=10000,baseUrl=https://nr-results-exam-test-frontend.apps.silver.devops.gov.bc.ca/
          working-directory: ./frontend
          browser: ${{ matrix.browser }}
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: ./cypress/screenshots
          if-no-files-found: ignore # 'warn' or 'error' are also available, defaults to `warn`

  ghcr-cleanup:
    name: GHCR Cleanup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        name: [backend, frontend]
    steps:
      - name: Keep last 50
        uses: actions/delete-package-versions@v4
        with:
          package-name: "${{ github.event.repository.name }}/${{ matrix.name }}"
          package-type: "container"
          min-versions-to-keep: 50
          ignore-versions: "^(prod|test)$"

  deploys-prod:
    name: PROD Deploys
    needs: [integration-tests, cypress-e2e]
    environment: prod
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        name: [backend, frontend]
        include:
          - name: backend
            file: backend/openshift.deploy.yml
            overwrite: true
            verification_path: /api
          - name: frontend
            file: frontend/openshift.deploy.yml
            overwrite: true
    steps:
      - uses: bcgov-nr/action-deployer-openshift@v1.4.0
        with:
          file: ${{ matrix.file }}
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: ${{ matrix.overwrite }}
          parameters:
            -p ZONE=prod -p PROMOTE=${{ github.repository }}/${{ matrix.name }}:test
            -p NAME=${{ github.event.repository.name }} ${{ matrix.parameters }}
          penetration_test: false
          verification_path: ${{ matrix.verification_path }}

  image-promotions:
    name: Promote images
    needs: [deploys-prod]
    runs-on: ubuntu-22.04
    permissions:
      packages: write
    strategy:
      matrix:
        component: [backend, frontend]
    steps:
      - uses: shrink/actions-docker-registry-tag@v3
        with:
          registry: ghcr.io
          repository: ${{ github.repository }}/${{ matrix.component }}
          target: test
          tags: prod
