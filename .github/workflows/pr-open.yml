name: PR

on:
  pull_request:

concurrency:
  # Cancel in progress for PR open and close
  group: ${{ github.event.number }}
  cancel-in-progress: false

jobs:
  # https://github.com/bcgov/action-builder-ghcr
  builds:
    name: Builds
    runs-on: ubuntu-24.04
    permissions:
      packages: write
    strategy:
      matrix:
        package: [backend, frontend]
    timeout-minutes: 10
    steps:
      - uses: bcgov/action-builder-ghcr@4.1.1
        with:
          keep_versions: 50
          package: ${{ matrix.package }}
          tags: ${{ github.event.number }}
          tag_fallback: latest
          triggers: ('${{ matrix.triggers }}/')

  # https://github.com/bcgov/action-deployer-openshift
  init:
    name: Init
    runs-on: ubuntu-24.04
    timeout-minutes: 1
    steps:
      - uses: bcgov/action-deployer-openshift@v4.0.0
        with:
          file: common/openshift.init.yml
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          parameters: -p ZONE=${{ github.event.number }}
            -p CHES_CLIENT_SECRET=${{ secrets.CHES_CLIENT_SECRET }}
            -p S3_SECRETKEY=${{ secrets.S3_SECRETKEY }}
            -p VITE_USER_POOLS_WEB_CLIENT_ID=${{ vars.VITE_USER_POOLS_WEB_CLIENT_ID }}
          triggers: ('backend/' 'common/' 'frontend/')

  deploys:
    name: Deploys
    needs: [builds, init]
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    strategy:
      matrix:
        name: [backend, frontend]
    steps:
      - uses: bcgov/action-deployer-openshift@v4.0.0
        with:
          file: ${{ matrix.name }}/openshift.deploy.yml
          oc_namespace: ${{ vars.OC_NAMESPACE }}
          oc_server: ${{ vars.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          parameters: -p ZONE=${{ github.event.number }}
            -p TAG=${{ github.event.number }}
            -p MOD_ZONE=$(( ${{ github.event.number }} % 50))
          triggers: ('backend/' 'common/' 'frontend/')

  results:
    name: PR Results
    if: always() && !failure()
    # Include all needs that could have failures!
    needs: [builds, deploys]
    runs-on: ubuntu-24.04
    steps:
      - run: echo "Workflow completed successfully!"
